{"version":3,"sources":["components/Todos/TodoInput.jsx","components/Todos/TodoItem.jsx","config/leanCloud.jsx","components/ForgotPasswordForm/ForgotPasswordForm.jsx","components/SignUpForm/SignUpForm.jsx","components/SignInForm/SignInForm.jsx","components/SignInOrSignUp/SignInOrSignUp.jsx","components/UserDialog.jsx","App.jsx","serviceWorker.ts","index.jsx"],"names":["submit","props","e","key","target","value","trim","onSubmit","changeTitle","onChange","type","content","className","bind","onKeyPress","TodoItem","checked","this","todo","status","toggle","title","onClick","delete","onToggle","onDelete","Component","AV","init","appId","appKey","TodoModel","getByUser","user","successFn","errorFn","query","Query","equalTo","find","then","response","array","map","t","id","call","error","create","deleted","Object","extend","set","acl","ACL","setPublicReadAccess","setWriteAccess","User","current","setReadAccess","setACL","save","update","createWithoutData","undefined","destroy","todoId","getCurrentUser","getUserFromAVUser","AVUser","attributes","ForgotPasswordForm","formData","email","href","onSignIn","username","password","onForgotPassword","SignInOrSignUp","state","selected","setState","switch","SignUpForm","onSignUp","SignInForm","UserDialog","selectedTab","preventDefault","setUsername","setPassword","setEmail","signUp","loginedUser","code","alert","logIn","signIn","todoInit","stateCopy","JSON","parse","stringify","selectedTeb","requestPasswordReset","success","changeFormData","showForgotPassword","resetPassword","returnToSignIn","App","newTodo","todoList","initTodoGetByUser","todos","filter","item","index","signOut","addTodo","onSignUpOrSignIn","logOut","oldStatus","event","push","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5dc70a25.chunk.js","sourcesContent":["import React from 'react'\nimport './TodoInput.scss'\n\n\nfunction submit(props, e) {\n  if (e.key === 'Enter') {\n    if (e.target.value.trim() !== '') {\n      props.onSubmit(e)\n    }\n  }\n}\n\n\nfunction changeTitle(props, e) {\n  props.onChange(e)\n}\n\nexport default function (props) {\n  return <input type=\"text\" value={props.content}\n    className=\"TodoInput\"\n    onChange={changeTitle.bind(null, props)}\n    onKeyPress={submit.bind(null, props)} />\n}\n","import React, { Component } from 'react'\nimport './TodoItem.scss'\n\n\nexport default class TodoItem extends Component {\n  render() {\n    return (\n      <div className=\"TodoItem\">\n        <input type=\"checkbox\"\n          checked={this.props.todo.status === 'completed'}\n          onChange={this.toggle.bind(this)}\n        />\n        <span className=\"title\">{this.props.todo.title}</span>\n        <button onClick={this.delete.bind(this)}>删除</button>\n      </div>\n    )\n  }\n\n  toggle(e) {\n    this.props.onToggle(e, this.props.todo)\n  }\n\n  delete(e) {\n    this.props.onDelete(e, this.props.todo)\n  }\n}","import AV from 'leancloud-storage'\n\n\nvar APP_ID = 'Cm3g0e6jj5b91eJ8rUVuubGb-MdYXbMMI';\nvar APP_KEY = 'Nq82JXJqI3dQw44wjULW12el';\n\nAV.init({\n  appId: APP_ID,\n  appKey: APP_KEY\n})\n\nexport default AV\n\n\nexport const TodoModel = {\n  getByUser(user, successFn, errorFn) {\n    // 文档见 https://leancloud.cn/docs/leanstorage_guide-js.html#批量操作\n    let query = new AV.Query('Todo')\n    query.equalTo('deleted', false);\n    query.find().then((response) => {\n      let array = response.map((t) => {\n        return { id: t.id, ...t }\n      })\n      successFn.call(null, array)\n    }, (error) => {\n      errorFn && errorFn.call(null, error)\n    })\n  },\n  create({ status, title, deleted }, successFn, errorFn) {\n    let Todo = AV.Object.extend('Todo')\n    let todo = new Todo()\n    todo.set('title', title)\n    todo.set('status', status)\n    todo.set('deleted', deleted)\n\n    // 根据文档 https://leancloud.cn/docs/acl-guide.html#单用户权限设置\n    // 这样做就可以让这个 Todo 只被当前用户看到\n    let acl = new AV.ACL()\n    acl.setPublicReadAccess(false) // 注意这里是 false\n    acl.setWriteAccess(AV.User.current(), true)\n    acl.setReadAccess(AV.User.current(), true)\n\n    todo.setACL(acl);\n\n    todo.save().then(function (response) {\n      successFn.call(null, response.id)\n    }, function (error) {\n      errorFn && errorFn.call(null, error)\n    })\n  },\n\n  update({ id, title, status, deleted }, successFn, errorFn) {\n    // 文档 https://leancloud.cn/docs/leanstorage_guide-js.html#更新对象\n    let todo = AV.Object.createWithoutData('Todo', id)\n    title !== undefined && todo.set('title', title)\n    status !== undefined && todo.set('status', status)\n    deleted !== undefined && todo.set('deleted', deleted)\n    todo.save().then((response) => {\n      successFn && successFn.call(null)\n    }, (error) => errorFn && errorFn.call(null, error))\n  },\n\n  destroy(todoId, successFn, errorFn) {\n    // 文档 https://leancloud.cn/docs/leanstorage_guide-js.html#删除对象\n    /*let todo = AV.Object.createWithoutData('Todo', todoId)\n    todo.destroy().then(function (response) {\n      successFn && successFn.call(null)\n    }, function (error) {\n      errorFn && errorFn.call(null, error)\n    });*/\n    // 我们不应该删除数据，而是将数据标记为 deleted\n    TodoModel.update({ id: todoId, title: '', status: '', deleted: true }, successFn, errorFn)\n  }\n\n}\n\n\nexport function signUp(email, username, password, successFn, errorFn) {\n\n  var user = new AV.User()\n  // 设置用户名\n  user.setUsername(username)\n  // 设置密码\n  user.setPassword(password)\n  // 设置邮箱\n  user.setEmail(email)\n  user.signUp().then(function (loginedUser) {\n    let user = getUserFromAVUser(loginedUser)\n    successFn.call(null, user)\n  }, function (error) {\n    errorFn.call(null, error)\n  })\n\n  return undefined\n\n}\n\nexport function signIn(username, password, successFn, errorFn) {\n  AV.User.logIn(username, password).then(function (loginedUser) {\n    let user = getUserFromAVUser(loginedUser)\n    successFn.call(null, user)\n  }, function (error) {\n    errorFn.call(null, error)\n  })\n}\n\nexport function signOut() {\n  AV.User.logOut()\n  return undefined\n}\n\nexport function getCurrentUser() {\n  let user = AV.User.current()\n  if (user) {\n    return getUserFromAVUser(user)\n  } else {\n    return null\n  }\n}\n\nexport function sendPasswordResetEmail(email, successFn, errorFn) {\n  AV.User.requestPasswordReset(email).then(function (success) {\n    successFn.call()\n  }, function (error) {\n    errorFn.call(null, error)\n  })\n}\n\nfunction getUserFromAVUser(AVUser) {\n  return {\n    id: AVUser.id,\n    ...AVUser.attributes\n  }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\n\nexport default class ForgotPasswordForm extends Component {\n  render() {\n    return (\n      <div className=\"forgotPassword\">\n        <h3>\n          重置密码\n        </h3>\n        <form className=\"forgotPassword\" onSubmit={this.props.onSubmit}> {/* 登录*/}\n          <div className=\"row\">\n            <label>邮箱</label>\n            <input type=\"text\" value={this.props.formData.email}\n              onChange={this.props.onChange.bind(null, 'email')} />\n          </div>\n          <div className=\"row actions\">\n            <button type=\"submit\">发送重置邮件</button>\n            <a href=\"#\" onClick={this.props.onSignIn}>返回登录</a>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React from \"react\";\n\n\nexport default function (props) {\n  return (\n    <form className=\"signUp\" onSubmit={props.onSubmit.bind(this)}> {/* 注册*/}\n      <div className=\"row\">\n        <label>邮箱</label>\n        <input type=\"text\" value={props.formData.email}\n          onChange={props.onChange.bind(null, 'email')} />\n      </div>\n      <div className=\"row\">\n        <label>用户名</label>\n        <input type=\"text\" value={props.formData.username}\n          onChange={props.onChange.bind(null, 'username')} />\n        {/* bind 不仅可以绑定 this，还可以绑定第一个参数 */}\n      </div>\n      <div className=\"row\">\n        <label>密码</label>\n        <input type=\"password\" value={props.formData.password}\n          onChange={props.onChange.bind(null, 'password')} />\n      </div>\n      <div className=\"row actions\">\n        <button type=\"submit\">注册</button>\n      </div>\n    </form>\n  )\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\n\nexport default function (props) {\n  return (\n    <form className=\"signIn\" onSubmit={props.onSubmit}> {/* 登录*/}\n      <div className=\"row\">\n        <label>用户名</label>\n        <input type=\"text\" value={props.formData.username}\n          onChange={props.onChange.bind(null, 'username')} />\n      </div>\n      <div className=\"row\">\n        <label>密码</label>\n        <input type=\"password\" value={props.formData.password}\n          onChange={props.onChange.bind(null, 'password')} />\n      </div>\n      <div className=\"row actions\">\n        <button type=\"submit\">登录</button>\n        <a href=\"#\" onClick={props.onForgotPassword}>忘记密码了？</a>\n      </div>\n    </form>\n  )\n}","import React, { Component } from 'react';\nimport SignUpForm from '../SignUpForm/SignUpForm'\nimport SignInForm from '../SignInForm/SignInForm'\n\n\nexport default class SignInOrSignUp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: 'signUp'\n    }\n  }\n\n  switch(e) {\n    this.setState({\n      selected: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"signInOrSignUp\">\n        <nav>\n          <label>\n            <input type=\"radio\" value=\"signUp\"\n              checked={this.state.selected === 'signUp'}\n              onChange={this.switch.bind(this)}\n            /> 注册</label>\n          <label>\n            <input type=\"radio\" value=\"signIn\"\n              checked={this.state.selected === 'signIn'}\n              onChange={this.switch.bind(this)}\n            /> 登录</label>\n        </nav>\n        <div className=\"panes\">\n          {this.state.selected === 'signUp' ?\n            <SignUpForm formData={this.props.formData}\n              onSubmit={this.props.onSignUp}\n              onChange={this.props.onChange}\n            />\n            : null}\n          {this.state.selected === 'signIn' ?\n            <SignInForm formData={this.props.formData}\n              onChange={this.props.onChange}\n              onSubmit={this.props.onSignIn}\n              onForgotPassword={this.props.onForgotPassword}\n            />\n            : null}\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { signUp, signIn, sendPasswordResetEmail } from '../config/leanCloud'\nimport ForgotPasswordForm from './ForgotPasswordForm/ForgotPasswordForm'\nimport SignInOrSignUp from './SignInOrSignUp/SignInOrSignUp'\nimport './UserDialog.scss'\n\nexport default class UserDialog extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTab: 'signInOrSignUp', //'forgotPassword'\n      formData: {\n        email: '',\n        username: '',\n        password: ''\n      }\n    }\n  }\n\n  signUp(e) {\n    e.preventDefault()\n    let { email, username, password } = this.state.formData\n    let success = (user) => {\n      this.props.onSignUp.call(null, user)\n    }\n    let error = (error) => {\n      switch (error.code) {\n        case 202:\n          alert('用户名已被占用')\n          break\n        case 203:\n          alert('电子邮箱地址已经被占用')\n          break\n        case 204:\n          alert('没有提供电子邮箱地址')\n          break\n        case 502:\n          alert('服务器维护中')\n          break\n        default:\n          alert(error)\n          break\n      }\n    }\n    signUp(email, username, password, success, error)\n  }\n\n\n  signIn(e) {\n    e.preventDefault()\n    let { username, password } = this.state.formData\n    let success = (user) => {\n      this.props.onSignIn.call(null, user)\n      this.props.todoInit.call(null)\n    }\n    let error = (error) => {\n      switch (error.code) {\n        case 205:\n          alert('找不到电子邮箱地址对应的用户')\n          break\n        case 210:\n          alert('用户名与密码不匹配')\n          break\n        case 211:\n          alert('找不到用户')\n          break\n        case 502:\n          alert('服务器维护中')\n          break\n        default:\n          alert(error)\n          break\n      }\n    }\n    signIn(username, password, success, error)\n  }\n\n\n  changeFormData(key, e) {\n    // this.state.formData.username = e.target.value\n    // this.setState(this.state)\n    // 像上面这样写会看到一个警告 warning  Do not mutate state directly. Use setState()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))  // 用 JSON 深拷贝\n    stateCopy.formData[key] = e.target.value\n    this.setState(stateCopy)\n  }\n\n  showForgotPassword() {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.selectedTeb = 'forgotPassword'\n    this.setState(stateCopy)\n  }\n  returnToSignIn() {\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.selectedTeb = 'signInOrSignUp'\n    this.setState(stateCopy)\n  }\n  resetPassword(e) {\n    e.preventDefault()\n    sendPasswordResetEmail(this.state.formData.email, null, null)\n  }\n\n  render() {\n    return (\n      <div className=\"UserDialog-Wrapper\">\n        <div className=\"UserDialog\">\n          {\n            this.state.selectedTab === 'signInOrSignUp' ?\n              <SignInOrSignUp\n                formData={this.state.formData}\n                onSignIn={this.signIn.bind(this)}\n                onSignUp={this.signUp.bind(this)}\n                onChange={this.changeFormData.bind(this)}\n                onForgotPassword={this.showForgotPassword.bind(this)}\n              /> :\n              <ForgotPasswordForm\n                formData={this.state.formData}\n                onSubmit={this.resetPassword.bind(this)}\n                onChange={this.changeFormData.bind(this)}\n                onSignIn={this.returnToSignIn.bind(this)}\n              />\n          }\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport TodoInput from './components/Todos/TodoInput'\nimport TodoItem from './components/Todos/TodoItem'\nimport UserDialog from './components/UserDialog'\nimport { getCurrentUser, signOut, TodoModel } from './config/leanCloud'\nimport 'normalize.css'\nimport './reset.css'\nimport './App.scss'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: getCurrentUser() || {},\n      newTodo: '',\n      todoList: []\n    }\n\n    this.initTodoGetByUser()\n\n  }\n  render() {\n    let todos = this.state.todoList\n      .filter((item) => !item.deleted)\n      .map((item, index) => {\n        return (\n          <li key={index}>\n            <TodoItem\n              todo={item}\n              onToggle={this.toggle.bind(this)}\n              onDelete={this.delete.bind(this)}\n            />\n          </li>\n        )\n      })\n\n\n    return (\n      <div className=\"App\">\n        <h1>{this.state.user.username || '我'}的待办\n          {this.state.user.id ? <button onClick={this.signOut.bind(this)}>登出</button> : null}\n        </h1>\n        <div className=\"inputWrapper\">\n          <TodoInput\n            content={this.state.newTodo}\n            onChange={this.changeTitle.bind(this)}\n            onSubmit={this.addTodo.bind(this)}\n          />\n        </div>\n        <ol className=\"todoList\">\n          {todos}\n        </ol>\n        {this.state.user.id ?\n          null :\n          <UserDialog\n            onSignUp={this.onSignUpOrSignIn.bind(this)}\n            onSignIn={this.onSignUpOrSignIn.bind(this)}\n            todoInit={this.initTodoGetByUser.bind(this)} />}\n      </div>\n    )\n  }\n\n  signOut() {\n    signOut()\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = {}\n    this.setState(stateCopy)\n  }\n\n  onSignUpOrSignIn(user) {\n    //消除「不要直接修改 state」的警告\n    let stateCopy = JSON.parse(JSON.stringify(this.state))\n    stateCopy.user = user\n    this.setState(stateCopy)\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  initTodoGetByUser() {\n    let user = getCurrentUser()\n    if (user) {\n      TodoModel.getByUser(user, (todos) => {\n        let stateCopy = JSON.parse(JSON.stringify(this.state))\n        stateCopy.todoList = todos\n        this.setState(stateCopy)\n      }, null)\n    }\n  }\n\n  toggle(e, todo) {\n    let oldStatus = todo.status\n    todo.status = todo.status === 'completed' ? '' : 'completed'\n    TodoModel.update(todo, () => {\n      this.setState(this.state)\n    }, (error) => {\n      todo.status = oldStatus\n      this.setState(this.state)\n    })\n  }\n\n  changeTitle(event) {\n    this.setState({\n      newTodo: event.target.value,\n      todoList: this.state.todoList\n    })\n  }\n\n  addTodo(event) {\n    let newTodo = {\n      title: event.target.value,\n      status: '',\n      deleted: false,\n      id: ''\n    }\n    TodoModel.create(newTodo, (id) => {\n      newTodo.id = id\n      this.state.todoList.push(newTodo)\n      this.setState({\n        newTodo: '',\n        todoList: this.state.todoList\n      })\n    }, (error) => {\n      console.log(error)\n    })\n  }\n  delete(event, todo) {\n    TodoModel.destroy(todo.id, () => {\n      todo.delete = true\n      this.setState(this.state)\n    }, null)\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}